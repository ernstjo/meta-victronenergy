#! /bin/sh

set -e

FIRMWARE=${*:-/opt/victronenergy/firmware}

release_gpios() {
    conf=$(find /usr/share/openocd -name $1) || return 0
    for n in $(awk '/^sysfsgpio/ { print $2 }' $conf); do
        if [ -e /sys/class/gpio/gpio$n ]; then
            echo $n >/sys/class/gpio/unexport
        fi
    done
}

do_openocd() {
    conf=$1
    data=$2
    openocd -f "$conf" -c "program $data verify reset exit"
    release_gpios "$conf"
}

get_modules() {
    for m; do
        grep -ow ^$m /proc/modules || true
    done
}

mod_unload() {
    MODULES=$(get_modules $@)
    test -n "$MODULES" && modprobe -r $MODULES || true
}

mod_reload() {
    test -n "$MODULES" && modprobe -a $MODULES || true
}

do_cerbo_adc() {
    file=$1

    oldver=$(cat /sys/bus/i2c/devices/3-0012/fwversion 2>/dev/null || echo 0)
    newver=$(hexdump -s 0xd0 -n 1 -e '/1 "%u"' $file)

    if [ $oldver -ge $newver ]; then
        echo "ADC/CAN firmware $oldver up to date"
        return
    fi

    echo "Installing ADC/CAN firmware $newver"

    mod_unload victron_cerbogx_adc
    do_openocd cerbogx-samc21-can-adc.cfg "$file"
    mod_reload
}

do_cerbo() {
    file=$1

    case $(basename "$file") in
        samc21_slcan_adc*.bin)
            do_cerbo_adc "$file"
            return
            ;;
        default)
            echo "Unknown firmware file $file"
            return
            ;;
    esac
}

case $(board-compat) in
    victronenergy,cerbo-gx)
        handler=do_cerbo
        ;;
    *)
        exit 0
        ;;
esac

find $FIRMWARE -type f | while read fw; do
    $handler "$fw"
done
